[package]
name = "net"
version = "0.0.1"
authors = ["The Servo Project Developers"]
license = "MPL-2.0"
edition = "2018"
publish = false
autotests = false  # Inhibit lookup for tests/*.rs without [[test]] sections
build = "build.rs"

[lib]
name = "net"
path = "lib.rs"
test = false
doctest = false

[dependencies]
async-recursion = "0.3.2"
async-tungstenite = { version = "0.7.1", features = ["tokio-openssl"] }
base64 = "0.10.1"
brotli = "3"
bytes = "1"
content-security-policy = { version = "0.4.0", features = ["serde"] }
cookie_rs = { package = "cookie", version = "0.11" }
crossbeam-channel = "0.4"
data-url = "0.1.0"
devtools_traits = { path = "../devtools_traits" }
embedder_traits = { path = "../embedder_traits" }
flate2 = "1"
futures = { version = "0.3", package = "futures" }
futures-util = { version  = "0.3" }
headers = "0.3"
http = "0.2"
hyper = { version = "0.14", features = ["client", "http1", "http2", "tcp", "stream"] }
hyper-openssl = "0.9.1"
hyper_serde = "0.11"
immeta = "0.4"
ipc-channel = {version = "0.14", features = ["async"]}
lazy_static = "1"
libflate = "0.1"
log = "0.4"
malloc_size_of = { path = "../malloc_size_of" }
malloc_size_of_derive = "0.1"
mime = "0.3"
mime_guess = "2.0.3"
msg = { path = "../msg" }
net_traits = { path = "../net_traits" }
openssl-sys = "0.9"
percent-encoding = "2.0"
pixels = { path = "../pixels" }
profile_traits = { path = "../profile_traits" }
serde = "1.0"
serde_json = "1.0"
servo_allocator = { path = "../allocator" }
servo_arc = { path = "../servo_arc" }
servo_config = { path = "../config" }
servo_url = { path = "../url" }
time = "0.1.41"
tokio = { version = "1", package = "tokio", features = ["sync", "macros", "rt-multi-thread"] }
tokio2 = { version = "0.2", package = "tokio", features = ["sync", "macros", "rt-threaded"] }
tokio-stream = "0.1"
tungstenite = "0.11"
url = "2.0"
uuid = { version = "0.8", features = ["v4"] }
webrender_api = { git = "https://github.com/servo/webrender" }
openssl = { version = "0.10" }

# Vendor in openssl on iOS
[target.'cfg(target_os = "ios")'.dependencies]
openssl = { version = "0.10", features = ["vendored"] }
[target.'cfg(not(target_os = "ios"))'.dependencies]
openssl = { version = "0.10" }

[dev-dependencies]
futures = {version = "0.3", features = ["compat"]}
std_test_override = { path = "../std_test_override" }
tokio-openssl = "0.6"
tokio-test = "0.4"
tokio-stream = { version = "0.1", features = ["net"] }
hyper = { version = "0.14", features = ["full"] }

[[test]]
name = "main"
path = "tests/main.rs"
